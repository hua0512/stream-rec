# Engine used to download the video (default to "ffmpeg")
engine = "ffmpeg"
# global flag to enable/disable danmu download
danmu = false
# global flag to enable/disable delete files after upload
# READ CAREFULLY!!!
# rclone command (using callback) is considered as an upload operation
# READ CAREFULLY!!!
# rclone command (using callback) is considered as an upload operation
# READ CAREFULLY!!!
# rclone command (using callback) is considered as an upload operation
deleteFilesAfterUpload = true
# output folder path
# Windows users should use double backslashes or single forward slashes to avoid escape characters,
# for example, "C:\\Users\\yourname\\Downloads" or "C:/Users/yourname/Downloads"
outputFolder = "path/to/your/output/folder"
# output file name format
# possible placeholder values: "{title}", "{streamer}", "%yyyy", "%MM", "%dd", "%HH", "%mm", "%ss"
outputFileName = "{title}-%yyyy-%MM-%dd %HH:%mm:%ss"
# output file format
outputFileFormat = "mp4"
# minimum size to be considered as valid download file (default to 20 MB)
# if the size is less than this value, the file will be deleted
minPartSize = 20000000
# maximum size of a download part file (default to 2.5 GB)
maxPartSize = 2621440000
# maximum number of concurrent downloads
maxConcurrentDownloads = 5
# maximum number of concurrent uploads
maxConcurrentUploads = 3
# the maximum number of download retries after a failure
maxDownloadRetries = 3
# delay between download retries
downloadRetryDelay = 10

# Huya platform config
[huyaConfig]
# primary CDN to use (default to "AL")
# possible values: "AL", HW", "TX", "BD", ...
primaryCdn = "AL"
# maximum bitrate
maxBitRate = 10000
# cookies to use (optional)
cookies = "your cookies"

# Douyin platform config
[douyinConfig]
# recording douyin stream requires cookies
# ttwid, msToken, __ac_nonce, __ac_signature is needed
# ttwid=aaaa; msToken=bbbb; __ac_nonce=cccc; __ac_signature=dddd;
cookies = "your cookies"
# maximum quality supported
# possible values: "origin", "uhd", "hd", "sd", "ld", "md", "audio"
quality = "origin"

# streamers to record
# below is an example of a streamer configuration
[[streamers]]
# streamer name (obligatory)
name = "TheShy"
# streamer url (obligatory)
url = "https://www.huya.com/991111"
# streamer config
# if not specified, it will use the default platform config
[streamers.downloadConfig]
# download config, possible values: "huya", "douyin"
type = "huya"
# Huya primary CDN to use (default to huyaConfig.primaryCdn)
primaryCdn = "HW"
# enable danmu download (default to global danmu flag)
danmu = true
# output file extension (default to global outputFileFormat)
outputFileExtension = "mp4"

# callback to execute when a parted download is finished
[[streamers.downloadConfig.onPartedDownload]]
# callback type, possible values: "rclone", "command"
# DANGER!!!: "rclone" is considered as an upload operation
# if "command" is used, the command will be executed in the shell and,
# the downloaded files path is passed as the first argument.
type = "rclone"
# whether to enable the callback (default to false)
enabled = true
# rclone remote name
# only used when type is "rclone"
# possible placeholder values: "{title}", "{streamer}", "%yyyy", "%MM", "%dd", "%HH", "%mm", "%ss"
remotePath = "drive:your/remote/path"
# program name
# only used when type is "command"
# remove this line if you're using rclone
# program = "ls"

# program args
args = [
    "--config",
    "/path/to/your/rclone.conf",
    "-P",
    "--onedrive-chunk-size",
    "100M"
]

# callback to execute when a streaming is finished
# DANGER!: if streamers.downloadConfig.onPartedDownload is enabled, there is no guarantee that at the time of the callback execution, onPartedDownload is finished
# DANGER!: if streamers.downloadConfig.onPartedDownload is enabled, there is no guarantee that at the time of the callback execution, onPartedDownload is finished
# DANGER!: if streamers.downloadConfig.onPartedDownload is enabled, there is no guarantee that at the time of the callback execution, onPartedDownload is finished
[[streamers.downloadConfig.onStreamingFinished]]
# callback type, possible values: "rclone", "command"
# if "command" is used, the command will be executed in the shell and,
# a string of downloaded files path (separated by \n) is passed as the first argument
type = "command"
# whether to enable the callback (default to false)
enabled = true
# rclone remote name
# possible placeholder values: "{title}", "{streamer}", "%yyyy", "%MM", "%dd", "%HH", "%mm", "%ss"
# remotePath = "drive:your/remote/path"

# program name
# only used when type is "command"
# remove this line if you're using rclone
program = "ls"
# program args
args = [
    "-l"
]